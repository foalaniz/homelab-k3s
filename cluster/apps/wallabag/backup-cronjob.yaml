apiVersion: batch/v1
kind: CronJob
metadata:
  name: wallabag-backup
  namespace: wallabag
spec:
  # Runs every day at 3:00 AM
  schedule: "0 3 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
            - name: backup
              image: alpine:latest
              command:
                - /bin/sh
                - -c
                - |
                  apk add --no-cache cifs-utils
                  
                  # 1. Mount the SMB share
                  mkdir -p /mnt/backups
                  mount -t cifs //192.168.1.6/k8s-data/backups/wallabag /mnt/backups -o username=$SMB_USERNAME,password=$SMB_PASSWORD,vers=3.0
                  
                  # 2. Create a timestamped archive of the Wallabag data
                  BACKUP_FILE="wallabag-backup-$(date +%Y-%m-%d-%H%M%S).tar.gz"
                  echo "Creating backup: ${BACKUP_FILE}"
                  
                  # The -C flag changes the directory so the archive paths are clean
                  tar -czf /mnt/backups/${BACKUP_FILE} -C /data . -C /images .
                  
                  echo "Backup complete. Files in backup directory:"
                  ls -lh /mnt/backups

                  # 3. Clean up old backups (optional, keeps the last 7)
                  echo "Cleaning up old backups..."
                  ls -t /mnt/backups/wallabag-backup-*.tar.gz | tail -n +8 | xargs rm -f

                  echo "Cleanup complete."
                  umount /mnt/backups
              env:
                - name: SMB_USERNAME
                  valueFrom:
                    secretKeyRef:
                      name: smb-share-creds 
                      key: username
                - name: SMB_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: smb-share-creds
                      key: password
              volumeMounts:
                - name: wallabag-data
                  mountPath: /data
                  readOnly: true
                - name: wallabag-images
                  mountPath: /images
                  readOnly: true
          volumes:
            - name: wallabag-data
              persistentVolumeClaim:
                claimName: wallabag-data
            - name: wallabag-images
              persistentVolumeClaim:
                claimName: wallabag-images