apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: readeck
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15-alpine
          env:
            - name: POSTGRES_DB
              value: "readeck"
            - name: POSTGRES_USER
              value: "readeck"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: readeck-secrets
                  key: POSTGRES_PASSWORD
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: readeck-postgres-data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: readeck
  namespace: readeck
spec:
  replicas: 1
  selector:
    matchLabels:
      app: readeck
  template:
    metadata:
      labels:
        app: readeck
    spec:
      initContainers:
        - name: wait-for-db
          image: busybox:1.36
          command: ['sh', '-c', 'until nc -zv postgres.readeck.svc.cluster.local 5432; do echo "Waiting for database..."; sleep 2; done']    
      containers:
        - name: readeck
          image: codeberg.org/readeck/readeck:latest
          ports:
            - containerPort: 8000
          env:
            - name: READECK_DATABASE_SOURCE
              value: "postgres://readeck:$(POSTGRES_PASSWORD)@postgres:5432/readeck"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: readeck-secrets
                  key: POSTGRES_PASSWORD
            - name: READECK_SERVER_HOST
              value: "0.0.0.0"
            - name: READECK_SERVER_PORT
              value: "8000"
          volumeMounts:
            - name: readeck-data
              mountPath: /readeck
      volumes:
        - name: readeck-data
          persistentVolumeClaim:
            claimName: readeck-data