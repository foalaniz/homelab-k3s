apiVersion: apps/v1
kind: Deployment
metadata:
  name: readeck
  namespace: readeck
  labels:
    app: readeck
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: readeck
  template:
    metadata:
      labels:
        app: readeck
    spec:
      serviceAccountName: readeck
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      initContainers:
        - name: wait-for-secret
          image: bitnami/kubectl:latest
          command:
            - /bin/sh
            - -c
            - "until kubectl get secret readeck-secrets -n readeck >/dev/null 2>&1; do echo Waiting for secret...; sleep 2; done"
        - name: wait-for-db
          image: docker.io/bitnami/postgresql:16.3.0-debian-12-r21
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: readeck-secrets
                  key: password
          command:
            - /bin/sh
            - -c
            - |
              export PGPASSWORD="$POSTGRES_PASSWORD"
              until pg_isready -h readeck-postgres-postgresql.readeck.svc.cluster.local -U readeck -d readeck -p 5432; do
                echo "Waiting for PostgreSQL to be truly ready..."
                sleep 5
              done
              echo "PostgreSQL is ready!"
      containers:
        - name: readeck
          image: codeberg.org/readeck/readeck:0.14.0
          # Remove custom command, let container use its default entrypoint
          ports:
            - containerPort: 8000
              name: http
          env:
            - name: READECK_SERVER_HOST
              value: "0.0.0.0"
            - name: READECK_SERVER_PORT
              value: "8000"
            - name: READECK_DATABASE_DRIVER
              value: "postgres"
            - name: READECK_DATABASE_SOURCE
              valueFrom:
                secretKeyRef:
                  name: readeck-secrets
                  key: database-url-helm
            - name: READECK_LOG_LEVEL
              value: "debug"
            - name: TZ
              value: "America/Mexico_City"
          volumeMounts:
            - name: readeck-data
              mountPath: /readeck
          livenessProbe:
            httpGet:
              path: /
              port: 8000
            initialDelaySeconds: 60
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 10
      volumes:
        - name: readeck-data
          persistentVolumeClaim:
            claimName: readeck-data