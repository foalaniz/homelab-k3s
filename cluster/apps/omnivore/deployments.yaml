apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: omnivore
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15-alpine
          env:
            - name: POSTGRES_DB
              value: "omnivore"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: omnivore-secrets
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: omnivore-secrets
                  key: POSTGRES_PASSWORD
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: omnivore-postgres-data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: omnivore
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
        - name: minio
          image: minio/minio:latest
          args:
            - "server"
            - "/data"
            - "--console-address"
            - ":9001"
          env:
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: omnivore-secrets
                  key: MINIO_ROOT_USER
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: omnivore-secrets
                  key: MINIO_ROOT_PASSWORD
          ports:
            - containerPort: 9000
            - containerPort: 9001
          volumeMounts:
            - name: minio-data
              mountPath: /data
      volumes:
        - name: minio-data
          persistentVolumeClaim:
            claimName: omnivore-minio-data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: omnivore
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
        - name: api
          image: bjw-s/omnivore-api:2024-07-28 # Using a community-maintained image
          env:
            - name: DATABASE_URL
              value: "postgres://omnivore:$(POSTGRES_PASSWORD)@postgres:5432/omnivore"
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: omnivore-secrets
                  key: API_JWT_SECRET
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: omnivore-secrets
                  key: POSTGRES_PASSWORD
          ports:
            - containerPort: 4000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  namespace: omnivore
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      containers:
        - name: web
          image: bjw-s/omnivore-web:2024-07-28
          env:
            - name: NEXT_PUBLIC_API_URL
              value: "http://api:4000/api/graphql"
          ports:
            - containerPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: content-fetch
  namespace: omnivore
spec:
  replicas: 1
  selector:
    matchLabels:
      app: content-fetch
  template:
    metadata:
      labels:
        app: content-fetch
    spec:
      containers:
        - name: content-fetch
          image: bjw-s/omnivore-content-fetch:2024-07-28
          env:
            - name: DATABASE_URL
              value: "postgres://omnivore:$(POSTGRES_PASSWORD)@postgres:5432/omnivore"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: omnivore-secrets
                  key: POSTGRES_PASSWORD
            - name: OMNIVORE_S3_ENDPOINT
              value: "minio:9000"
            - name: OMNIVORE_S3_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: omnivore-secrets
                  key: MINIO_ROOT_USER
            - name: OMNIVORE_S3_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: omnivore-secrets
                  key: MINIO_ROOT_PASSWORD
            - name: OMNIVORE_S3_BUCKET
              value: "omnivore-file-storage"
            - name: OMNIVORE_S3_FORCE_PATH_STYLE
              value: "true"